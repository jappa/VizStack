VIZ-VGL(1)
===========
Shree Kumar <shreekumar@users.sourceforge.net>


NAME
----
viz-vgl - runs an application using VirtualGL, using the VirtualGL Image Transport if needed.

SYNOPSIS
--------
*viz-vgl* ['OPTIONS']


DESCRIPTION
-----------
The viz-vgl(1) command runs an application using VirtualGL,
using the VGL Image Transport if needed.  The GUI of the 
application runs on the local X server while the OpenGL 
rendering happens on an allocated GPU.

You must execute this script either inside an X desktop
session, or inside an SSH session with X11 forwarding 
enabled. This script will automatically pick up a GPU for
you to use.  You may also choose a GPU by passing one/more
of the options described below.

If the allocated GPU is on a different node, then this script
uses VGL Image Transport with X11 Forwarding, over an SSH 
connection. If you haven't setup passwordless SSH, then you'll
be prompted for a password.  The X11 traffic generated by the
application passes via SSH, and is always encrypted.

RESOURCE ALLOCATION OPTIONS
---------------------------

*-x, --exclusive*::
    Request exclusive access to a GPU. By default, a shared GPU is allocated.
    Use this option to run GPU-intensive applications or for purposes like
    benchmarking.

*-N, --full-node*::
    Request exclusive access to a node. This will allocate all resources on
    a node, not just GPUs. The first GPU on the node will be used to run the
    OpenGL apps.  Consider using this if your application uses up all GPUs on
    a node, or uses up other resources (e.g. CPUs).

*-s, --stereo*::
    Use this to run an application in stereo mode.  You may run an
    application in stereo, provided that the local X server is setup to
    enable Quad Buffered Stereo. Stereo usage always allocates a complete GPU.

*--gpu-type*='TYPE'::
    Use a specific type of GPU 'TYPE' for this remote session. Note that  
    GPU types will have spaces in it, so you will need to quote the string.

*-a, --allocate-from*='NODE'::
    Allocate the GPU on host 'NODE'. If you use this option multiple times, 
    then a single GPU from one of the specified hosts will be used. Note that
    the allocation is independent of the order in which the hostnames are 
    specified on the command line. This option cannot be used if -b is used.
    The behaviour of this option changes when one of --specific-gpus, or 
    --specific-nodes is used, as noted below.

ADDITIONAL RESOURCE ALLOCATION OPTIONS
--------------------------------------

viz-tvnc can allocate additional GPUs for a user to use inside the TurboVNC
session.

*--specific-gpus*::
    Use this if you want to allocate specific GPUs. Use the -a option one or 
    more times to specify the GPUs you need. Note that only the first GPU will 
    be used to run the application using VirtualGL. The other GPUs will be 
    setup with X servers, and information about them will be displayed. All 
    GPUs are allocated with exclusive access.

*--specific-nodes*::
    Use this if you want to allocate specific nodes. Use the -a option one or 
    more times to specify the nodes you need. Note that only a matching GPU 
    on the first node will be used to run the application using VirtualGL. 
    The other GPUs will be setup with X servers, and information about them 
    will be displayed. All GPUs are allocated with exclusive access.

VirtualGL OPTIONS
-----------------

*-c, --compress*::
    Compress images using JPEG compression. By default, no compression is used.
    This option cannot be used with --x11-draw.

*--secure*::
    Use this option to encrypt the application's image stream. By default the 
    application's image stream is left unencrypted. This results in maximum 
    performance. Using this option will encrypt the images using SSL, thereby
    reducing performance.  Enable this if you want absolute security. Also 
    note that this option only takes effect if the allocated GPU is on a 
    different node compared to where this script runs.

*--x11-draw*::
    Use this option if are unable to use the VirtualGL client on your local X
    server. This will force VirtualGL to send uncompressed 3D images directly
    to your X server. Using this option will typically result in lower 
    performance. However, it can help you get your application up and running
    even if you have nothing more than just a local X server.

MISCELLANEOUS OPTIONS
---------------------

*--shell*::
    Use this option to start a shell after allocating a GPU. You may use the
    'vglrun' command inside this shell to run one/more OpenGL applications.

*--show-gpu-types*::
    Prints out a list of GPU types that are potentially available for allocation.

*-h, --help*::
    Prints this message.

EXIT STATUS
-----------
*0*::
    Success

*1*::
    Failure (unable to allocate resources, termination via
    ^C, any other abnormal termination)


EXAMPLES
--------

Hello, VirtualGL!

*# viz_vgl glxgears*

Hello, VirtualGL Stereo!

*# viz_vgl -s -- glxgears -stereo*

Usage of -- allows you to run an application which itself
uses options which begin with a hyphen.

Note that the glxgears binary that comes with SLES10.2 does
not support the stereo option. To run the stereo application,
your local desktop must also be running with stereo enabled.

Let's say you have a cygwin X server on your Windows desktop.
SSH to the VizStack system with X11 forwarding (ssh -x).
After these steps, you can run any application, e.g.,

*# viz_vgl --x11-draw googleearth*

should cause Google Earth to pop up on your windows desktop.

AUTHOR
------
Written by Shree Kumar <shreekumar@users.sourceforge.net>


RESOURCES
---------
SourceForge: <http://vizstack.sourceforge.net>

COPYING
-------
Copyright \(C) 2009-2010 Hewlett-Packard. Free use of this software is
granted under the terms of the GNU General Public License (GPL) version
2.

