#!/usr/bin/env python

import vsapi
# Connect to the SSM
ra = vsapi.ResourceAccess()
# Allocate a GPU and a Server on the same node
alloc = ra.allocate([ [vsapi.GPU(), vsapi.Server()] ])
res = alloc.getResources()
gpu = res[0][0]
srv = res[0][1]
screen = vsapi.Screen(0)
# Setup the X screen
if gpu.getAllowNoScanOut():
gpu.clearScanouts()
screen.setFBProperty('resolution', [1280,1024])
else:
if len(gpu.getScanouts())==0:
sc = gpu.getScanoutCaps()
gpu.setScanout(0, 'HP LP2065', sc[0][0])
# X screen controls the allocated GPU
screen.setGPU(gpu)
# Configure the screen on our allocated server
srv.setScreen(screen)
# Configure X server - this propagates the X server
# configuration to the SSM
alloc.setupViz(ra)
# Start X server
alloc.startViz(ra)
# Run glxinfo on the server
proc = srv.run(['glxinfo'])
proc.wait()
# Stop the X servers
alloc.stopViz(ra)
# Give up the resources we are using
ra.deallocate(alloc)
# Disconnect from the SSM
ra.stop()
